{"version":3,"file":"static/js/499.176ad093.chunk.js","mappings":"0RAEaA,EAAQC,EAAAA,EAAAA,KAAH,iEAILC,EAAQD,EAAAA,EAAAA,IAAH,mEAKLE,EAAOF,EAAAA,EAAAA,GAAH,6HASJG,EAAOH,EAAAA,EAAAA,GAAH,4JAQJI,EAAQJ,EAAAA,EAAAA,KAAH,iG,SC2BlB,EA9CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJR,EAAWQ,EAAKA,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAY,oDACb,IACAC,SAAQ,WACPb,GAAa,EACd,GACJ,GAAE,CAACC,IAECJ,EAIL,OACE,UAACL,EAAD,WACGO,IAAa,SAACe,EAAA,EAAD,IACM,IAAnBjB,EAAQkB,QACP,SAACtB,EAAD,UACGI,EAAQmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACzB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAkByB,KAAM,GAAIC,MAAO,WAClCH,MAEH,6BAAKC,OALIF,EADA,OAWf,SAAC3B,EAAD,gEAIP,C","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.span`\n  font-size: 22px;\n  font-weight: 700;\n`;\nexport const Wrapp = styled.div`\n  /* width: 300px; */\n  font-size: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  flex-wrap: wrap;\n\n  font-size: 16px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  /* width: 150px; */\n  box-shadow: 0px 0px 3px 3px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Topic = styled.span`\n  display: flex;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { BsFillPeopleFill } from 'react-icons/bs';\n\nimport { fetchReviews } from 'servises/api';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Title, List, Item, Wrapp, Topic } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchReviews(movieId)\n      .then(data => {\n        setReviews(data.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong. Repeat one more time!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <Wrapp>\n      {isLoading && <Loader />}\n      {reviews.length !== 0 ? (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <Topic>\n                <BsFillPeopleFill size={28} color={'orange'} />\n                {author}\n              </Topic>\n              <p> {content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Title>Sorry we don't have any reviews for this movie </Title>\n      )}\n    </Wrapp>\n  );\n};\n\nexport default Reviews;\n"],"names":["Title","styled","Wrapp","List","Item","Topic","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","then","data","results","catch","error","console","log","toast","finally","Loader","length","map","id","author","content","size","color"],"sourceRoot":""}