{"version":3,"file":"static/js/691.1aaf3c19.chunk.js","mappings":"mTAGaA,GAAUC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qJAaPE,EAAUF,EAAAA,EAAAA,IAAH,0CAIPG,EAAOH,EAAAA,EAAAA,GAAH,8CAIJI,EAAQJ,EAAAA,EAAAA,KAAH,iEAKLK,EAAUL,EAAAA,EAAAA,KAAH,4C,kLC1BPE,EAAUF,EAAAA,EAAAA,IAAH,iFAIPM,GAASN,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,yQAmBNO,EAAOP,EAAAA,EAAAA,KAAH,0CAIJQ,EAAQR,EAAAA,EAAAA,MAAH,uIASLS,EAAST,EAAAA,EAAAA,OAAH,0N,6BC+EnB,EAtGe,WAAO,IAAD,EACXU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAO,UAAAF,EAASG,aAAT,eAAgBC,OAAhB,IAMbC,QAAQC,IAAIR,GAqCZ,OAvBAS,EAAAA,EAAAA,YAAU,WACRb,EAAS,GACV,GAAE,CAACL,KAEJkB,EAAAA,EAAAA,YAAU,WACM,KAAVhB,IAIJK,GAAa,IACbY,EAAAA,EAAAA,IAAWjB,GACRkB,MAAK,SAAAC,GACJhB,EAASgB,EAAKA,KAAKC,QACpB,IACAC,OAAM,SAAAC,GACLR,QAAQC,IAAIO,GACZC,EAAAA,GAAAA,MAAY,oDACb,IACAC,SAAQ,WACPnB,GAAa,EACd,IACJ,GAAE,CAACL,KAGF,UAACb,EAAD,YACE,UAACI,EAAD,CAAQkC,GAAId,EAAZ,WACE,SAAC,MAAD,CAA0Be,KAAM,GAAIC,MAAO,WAD7C,cAIEhC,IACA,iCACE,UAACH,EAAD,CAAMoC,SA3CO,SAAAC,GACnBA,EAAEC,iBAEkB,KAAhBhC,EAAKiC,QAKT9B,EAAS4B,EAAEG,OAAOC,KAAKC,MAAMC,eAC7B3B,EAAgB,CAAER,MAAO6B,EAAEG,OAAOC,KAAKC,MAAMC,iBAL3CZ,EAAAA,GAAAA,MAAY,wHAMf,EAiCO,WACE,SAAC9B,EAAD,CACEwC,KAAK,OACLG,KAAK,OACLF,MAAOpC,EACPuC,aAAa,MACbC,YAAY,eACZC,SAxDS,SAAAV,GACnB9B,EAAQ8B,EAAEG,OAAOE,MAAMC,eACvB3B,EAAgB,GACjB,KAuDS,SAACd,EAAD,CAAQ0C,KAAK,SAAb,UACE,0CAGHhC,IAAa,SAACoC,EAAA,EAAD,IACI,IAAjBtC,EAAMuC,SACL,wBACGvC,EAAMwC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBX,EAAvB,EAAuBA,KAAvB,OACT,SAAC,KAAD,CAEER,GAAE,UAAKkB,GACP/B,MAAO,CACLC,KAAMJ,GAJV,UAOE,0BACE,SAAC,MAAD,CAAgBiB,KAAM,GAAIC,MAAO,YACjC,UAAC,KAAD,WACGiB,EACAX,SAVAU,EAFE,UAsBnB,SAAC,KAAD,MAGL,C","sources":["pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const NavItem = styled(NavLink)`\n  text-decoration: none;\n\n  font-size: 16px;\n\n  color: black;\n\n  :hover,\n  :focus-visible {\n    color: orange;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const Imem = styled.ul`\n  padding-top: 10px;\n`;\n\nexport const Title = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Options = styled.span`\n  margin-left: 5px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  /* box-shadow: 0px 0px 5px 4px rgba(0, 0, 0, 0.3); */\n`;\n\nexport const Buttom = styled(NavLink)`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  text-decoration: none;\n  border-radius: 4px;\n\n  padding: 5px;\n\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n\n  :hover,\n  :focus-visible {\n    color: orange;\n  }\n`;\n\nexport const Form = styled.form`\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid orange;\n  border-radius: 6px;\n  width: 300px;\n  height: 30px;\n\n  margin-right: 10px;\n`;\n\nexport const Search = styled.button`\n  border-radius: 6px;\n  border: none;\n\n  padding: 5px;\n  height: 35px;\n\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n\n  :hover,\n  :focus-visible {\n    color: orange;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Outlet,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\nimport { IoArrowBackCircleOutline } from 'react-icons/io5';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\n\nimport { fetchFilms } from 'servises/api';\nimport { Wrapper, Buttom, Form, Input, Search } from './Movies.styled';\nimport { NavItem, Options } from '../Home/Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const [text, setText] = useState('');\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const link = location.state?.from || `/`;\n\n  const handleChange = e => {\n    setText(e.target.value.toLowerCase());\n    setSearchParams('');\n  };\n  console.log(searchParams);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text.trim() === '') {\n      toast.error('Введите текст запроса!');\n      return;\n    }\n\n    setQuery(e.target.name.value.toLowerCase());\n    setSearchParams({ query: e.target.name.value.toLowerCase() });\n  };\n\n  useEffect(() => {\n    setFilms([]);\n  }, [text]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    setIsLoading(true);\n    fetchFilms(query)\n      .then(data => {\n        setFilms(data.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong. Repeat one more time!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  return (\n    <Wrapper>\n      <Buttom to={link}>\n        <IoArrowBackCircleOutline size={20} color={'orange'} />\n        Go back\n      </Buttom>\n      {!movieId && (\n        <>\n          <Form onSubmit={handleSubmit}>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              value={text}\n              autoComplete=\"off\"\n              placeholder=\"Search films\"\n              onChange={handleChange}\n            />\n            <Search type=\"submit\">\n              <span>Search</span>\n            </Search>\n          </Form>\n          {isLoading && <Loader />}\n          {films.length !== 0 && (\n            <ul>\n              {films.map(({ id, original_title, name }) => (\n                <NavItem\n                  key={id}\n                  to={`${id}`}\n                  state={{\n                    from: location,\n                  }}\n                >\n                  <p>\n                    <AiOutlineCheck size={20} color={'orange'} />\n                    <Options>\n                      {original_title}\n                      {name}\n                    </Options>\n                  </p>\n                </NavItem>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n\n      <Outlet />\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["NavItem","styled","NavLink","Wrapper","Imem","Title","Options","Buttom","Form","Input","Search","movieId","useParams","useState","text","setText","query","setQuery","films","setFilms","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","link","state","from","console","log","useEffect","fetchFilms","then","data","results","catch","error","toast","finally","to","size","color","onSubmit","e","preventDefault","trim","target","name","value","toLowerCase","type","autoComplete","placeholder","onChange","Loader","length","map","id","original_title"],"sourceRoot":""}