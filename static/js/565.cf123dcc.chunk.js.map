{"version":3,"file":"static/js/565.cf123dcc.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,EAAAA,GAAH,kIAQJC,EAAMD,EAAAA,EAAAA,IAAH,mIAOHE,EAAOF,EAAAA,EAAAA,GAAH,yCAIJG,EAAQH,EAAAA,EAAAA,KAAH,iEAKLI,EAAYJ,EAAAA,EAAAA,KAAH,6C,SCsCtB,EAxDa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJR,EAAQQ,EAAKA,KAAKT,KACnB,IACAU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAY,oDACb,IACAC,SAAQ,WACPZ,GAAa,EACd,GACJ,GAAE,CAACC,IAECJ,EAIL,OACE,2BACGE,IAAa,SAACc,EAAA,EAAD,IACG,IAAhBhB,EAAKiB,QACJ,SAACxB,EAAD,UACGO,EAAKkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,UAAC1B,EAAD,WACGyB,GACC,SAAC1B,EAAD,CAAK4B,IAAG,UA9BH,mCA8BG,OAAqBF,GAAgBG,IAAKJ,KAElD,SAACzB,EAAD,CAAK4B,IAAG,UA/BR,yEA+ByBC,IAAKJ,KAEhC,UAACvB,EAAD,WAAQuB,EAAR,QACA,0BACE,SAACtB,EAAD,0BACCwB,OATMH,EADH,OAgBZ,UAACtB,EAAD,sFAEQ,SAKf,C","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 10px;\n  font-size: 16px;\n`;\n\nexport const Img = styled.img`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Item = styled.li`\n  width: 150px;\n`;\n\nexport const Title = styled.span`\n  font-size: 22px;\n  font-weight: 700;\n`;\n\nexport const Character = styled.span`\n  font-weight: 700;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchFilmsCast } from 'servises/api';\nimport { Loader } from '../../components/Loader/Loader';\nimport { List, Img, Item, Title, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const filmPosterUrl = `https://image.tmdb.org/t/p/w500`;\n  const noImages = `https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchFilmsCast(movieId)\n      .then(data => {\n        setCast(data.data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong. Repeat one more time!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {cast.length !== 0 ? (\n        <List>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <Item key={id}>\n              {profile_path ? (\n                <Img src={`${filmPosterUrl}${profile_path}`} alt={name} />\n              ) : (\n                <Img src={`${noImages}`} alt={name} />\n              )}\n              <Title>{name} </Title>\n              <p>\n                <Character>Character: </Character>\n                {character}\n              </p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Title>\n          Unfortunately, we do not have information about the actors of this\n          film.{' '}\n        </Title>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["List","styled","Img","Item","Title","Character","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchFilmsCast","then","data","catch","error","console","log","toast","finally","Loader","length","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}